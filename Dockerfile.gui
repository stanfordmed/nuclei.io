FROM python:3.8-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libfontconfig1 \
    libxrender1 \
    libdbus-1-3 \
    libxkbcommon-x11-0 \
    libxi6 \
    libsm6 \
    libgl1 \
    xvfb \
    libdouble-conversion3 \
    libxcb-icccm4 \
    libxcb-image0 \
    libxcb-keysyms1 \
    libxcb-randr0 \
    libxcb-render-util0 \
    libxcb-xinerama0 \
    libxcb-xkb1 \
    x11-utils \
    x11-apps \
    mesa-utils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first to leverage Docker cache
COPY requirements-minimal.txt .

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements-minimal.txt

# Copy essential files
COPY software/ /app/software/
COPY assets/ /app/assets/

# Create data directory 
RUN mkdir -p /app/data

# Set environment variables
ENV PYTHONPATH=/app
ENV QT_PLUGIN_PATH=/usr/local/lib/python3.8/site-packages/PySide6/Qt/plugins
ENV QML2_IMPORT_PATH=/usr/local/lib/python3.8/site-packages/PySide6/Qt/qml
ENV QT_QPA_PLATFORM_PLUGIN_PATH=/usr/local/lib/python3.8/site-packages/PySide6/Qt/plugins/platforms

# Entry script for better handling of X11 display
COPY docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
CMD ["python", "-m", "software.main"]